From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yevhenii Havrylko <egavrilko@gmail.com>
Date: Mon, 19 Apr 2021 01:36:25 +0300
Subject: [PATCH] 2954: Fix xml import

---
 .../ghidra/app/util/cparser/C/CParserUtils.java | 17 ++++++++++++++++-
 .../ghidra/app/util/xml/FunctionsXmlMgr.java    | 12 +++++++++++-
 gradle/support/ip.gradle                        |  1 +
 3 files changed, 28 insertions(+), 2 deletions(-)

diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/cparser/C/CParserUtils.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/cparser/C/CParserUtils.java
index ff8dffb1f..2e78f08d9 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/cparser/C/CParserUtils.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/cparser/C/CParserUtils.java
@@ -32,6 +32,7 @@ import ghidra.program.util.DefaultLanguageService;
 import ghidra.util.*;
 import ghidra.util.exception.DuplicateNameException;
 import ghidra.util.task.TaskMonitor;
+import org.apache.commons.lang3.StringUtils;
 
 public class CParserUtils {
 
@@ -174,6 +175,18 @@ public class CParserUtils {
 			return null;
 		}
 
+        GenericCallingConvention convention = null;
+
+        for (GenericCallingConvention conv : GenericCallingConvention.values()) {
+            if (conv == GenericCallingConvention.unknown) continue;
+
+            if (StringUtils.endsWith(signatureParts[0], " " + conv)) {
+                convention = conv;
+                signatureParts[0] = StringUtils.removeEnd(signatureParts[0], " " + conv);
+                break;
+            }
+        }
+
 		String replacedText =
 			signatureParts[0] + " " + getTempName(signatureParts[1].length()) + signatureParts[2];
 
@@ -190,7 +203,9 @@ public class CParserUtils {
 			// put back the old signature name
 			dt.setName(signatureParts[1]);
 
-			return (FunctionDefinitionDataType) dt;
+            FunctionDefinitionDataType fdt = (FunctionDefinitionDataType) dt;
+            if (convention != null) fdt.setGenericCallingConvention(convention);
+            return fdt;
 		}
 		catch (InvalidNameException | DuplicateNameException e) {
 			// can't happen since we are calling setName() with the value that was 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/xml/FunctionsXmlMgr.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/xml/FunctionsXmlMgr.java
index 959204082..19379b8c3 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/xml/FunctionsXmlMgr.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/xml/FunctionsXmlMgr.java
@@ -155,6 +155,12 @@ class FunctionsXmlMgr {
 							Namespace namespace =
 								NamespaceUtils.getFunctionNamespaceAt(program, namespacePath,
 									entryPoint);
+							if(namespace == null && namespacePath != null){
+							    namespace = NamespaceUtils.createNamespaceHierarchy(
+							            namespacePath.getPath(),
+                                        program.getGlobalNamespace(),
+                                        program,SourceType.IMPORTED);
+                            }
 							if (namespace == null) {
 								namespace = program.getGlobalNamespace();
 							}
@@ -210,7 +216,11 @@ class FunctionsXmlMgr {
 						}
 					}
 					else {
-						tryToParseTypeInfoComment(monitor, func, typeInfoComment);
+                        tryToParseTypeInfoComment(monitor, func, typeInfoComment);
+
+                        if (func.getSignature().getGenericCallingConvention() == GenericCallingConvention.thiscall && func.getParentNamespace() != null) {
+                            NamespaceUtils.convertNamespaceToClass(func.getParentNamespace());
+                        }
 					}
 					addLocalVars(func, stackVariables, overwriteConflicts);
 
diff --git a/gradle/support/ip.gradle b/gradle/support/ip.gradle
index 41c5f723a..c0473383e 100644
--- a/gradle/support/ip.gradle
+++ b/gradle/support/ip.gradle
@@ -135,6 +135,7 @@ def Map<String, List<String>> getIpForModule(Project p) {
 		exclude "**/.vs/**"
 		exclude "**/*.vcxproj.user"
 		exclude "**/.vscode/**"
+		exclude "**/*.iml" // Intellij project files
 	}
 	tree.each { file ->
 			String ip = getIp(p.projectDir, file)
-- 
2.39.1

