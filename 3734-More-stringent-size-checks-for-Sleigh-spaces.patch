From 56f6ba003d8c4e1c816b33a9f1b6d0e9d1648cd0 Mon Sep 17 00:00:00 2001
From: Alessandro Gatti <a.gatti@frob.it>
Date: Thu, 9 Dec 2021 19:56:14 +0100
Subject: [PATCH] 3734: More stringent size checks for Sleigh spaces.

---
 .../ghidra/sleigh/grammar/SleighCompiler.g    | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

diff --git a/Ghidra/Framework/SoftwareModeling/src/main/antlr/ghidra/sleigh/grammar/SleighCompiler.g b/Ghidra/Framework/SoftwareModeling/src/main/antlr/ghidra/sleigh/grammar/SleighCompiler.g
index 2747b4701..6205ac3f8 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/antlr/ghidra/sleigh/grammar/SleighCompiler.g
+++ b/Ghidra/Framework/SoftwareModeling/src/main/antlr/ghidra/sleigh/grammar/SleighCompiler.g
@@ -407,9 +407,11 @@ contextdef
 spacedef
 	scope {
 		SpaceQuality quality;
+		boolean wordSizeSet;
 	}
 	@init {
 		$spacedef::quality = null;
+		$spacedef::wordSizeSet = false;
 	}
 	:	^(OP_SPACE n=unbound_identifier["space"] {
 			String name = "<parse error>";
@@ -450,14 +452,23 @@ typemod
 	;
 
 sizemod
-	:	^(OP_SIZE i=integer) {
-			$spacedef::quality.size = $i.value.intValue();
+	:	^(t=OP_SIZE i=integer) {
+			if ($spacedef::quality.size != 0) {
+				reportError(find(t), "space '" + $spacedef::quality.name + "' already has a size set");
+			} else {
+				$spacedef::quality.size = $i.value.intValue();
+			}
 		}
 	;
 
 wordsizemod
-	:	^(OP_WORDSIZE i=integer) {
-			$spacedef::quality.wordsize = $i.value.intValue();
+	:	^(t=OP_WORDSIZE i=integer) {
+			if ($spacedef::wordSizeSet) {
+				reportError(find(t), "space '" + $spacedef::quality.name + "' already has a word size set");
+			} else {
+				$spacedef::quality.wordsize = $i.value.intValue();
+				$spacedef::wordSizeSet = true;
+			}
 		}
 	;
 
-- 
2.38.1

