From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Eric Kilmer <eric.d.kilmer@gmail.com>
Date: Wed, 24 May 2023 19:27:54 -0400
Subject: [PATCH] 5383: Fix memory leak after xml errors

Regenerated with bison 3.0.4 on AlmaLinux 8
---
 .../Decompiler/src/decompile/cpp/xml.cc       | 106 ++++++++++++++++--
 .../Decompiler/src/decompile/cpp/xml.y        |   3 +
 2 files changed, 100 insertions(+), 9 deletions(-)

diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc
index 35ad4f124..8afab6622 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc
@@ -754,14 +754,14 @@ static const yytype_int8 yytranslate[] =
 /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
 static const yytype_uint8 yyrline[] =
 {
-       0,   150,   150,   151,   152,   153,   154,   155,   156,   157,
-     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
-     169,   170,   171,   172,   173,   175,   176,   177,   178,   179,
-     180,   181,   183,   184,   185,   186,   187,   188,   189,   191,
-     192,   193,   194,   195,   196,   197,   199,   200,   202,   203,
-     204,   205,   207,   208,   209,   210,   211,   212,   214,   215,
-     216,   217,   218,   219,   220,   222,   223,   225,   226,   227,
-     228
+       0,   153,   153,   154,   155,   156,   157,   158,   159,   160,
+     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
+     172,   173,   174,   175,   176,   178,   179,   180,   181,   182,
+     183,   184,   186,   187,   188,   189,   190,   191,   192,   194,
+     195,   196,   197,   198,   199,   200,   202,   203,   205,   206,
+     207,   208,   210,   211,   212,   213,   214,   215,   217,   218,
+     219,   220,   221,   222,   223,   225,   226,   228,   229,   230,
+     231
 };
 #endif
 
@@ -1171,7 +1171,95 @@ yydestruct (const char *yymsg,
   YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);
 
   YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
-  YY_USE (yykind);
+  switch (yykind)
+    {
+    case YYSYMBOL_CHARDATA: /* CHARDATA  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_CDATA: /* CDATA  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_ATTVALUE: /* ATTVALUE  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_COMMENT: /* COMMENT  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_CHARREF: /* CHARREF  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_NAME: /* NAME  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_SNAME: /* SNAME  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_ELEMBRACE: /* ELEMBRACE  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_COMMBRACE: /* COMMBRACE  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_attsinglemid: /* attsinglemid  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_attdoublemid: /* attdoublemid  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_AttValue: /* AttValue  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_CDSect: /* CDSect  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_STag: /* STag  */
+            { delete ((*yyvaluep).attr); }
+        break;
+
+    case YYSYMBOL_EmptyElemTag: /* EmptyElemTag  */
+            { delete ((*yyvaluep).attr); }
+        break;
+
+    case YYSYMBOL_stagstart: /* stagstart  */
+            { delete ((*yyvaluep).attr); }
+        break;
+
+    case YYSYMBOL_SAttribute: /* SAttribute  */
+            { delete ((*yyvaluep).pair); }
+        break;
+
+    case YYSYMBOL_ETag: /* ETag  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_Reference: /* Reference  */
+            { }
+        break;
+
+    case YYSYMBOL_CharRef: /* CharRef  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+    case YYSYMBOL_EntityRef: /* EntityRef  */
+            { delete ((*yyvaluep).str); }
+        break;
+
+      default:
+        break;
+    }
   YY_IGNORE_MAYBE_UNINITIALIZED_END
 }
 
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/xml.y b/Ghidra/Features/Decompiler/src/decompile/cpp/xml.y
index 2f9d0e5d4..8e03e495d 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/xml.y
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/xml.y
@@ -145,6 +145,9 @@ static std::mutex handler_mutex;
 %type <i> Reference
 %type <attr> EmptyElemTag STag stagstart
 %type <pair> SAttribute
+
+%destructor { } <i>
+%destructor { delete $$; } <*>
 %%
 
 document:  element Misc;
-- 
2.41.0

