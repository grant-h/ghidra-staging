From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E3=81=8B=E3=81=84=E3=81=A0?= <kaida@cyberkaida.gg>
Date: Sat, 4 Feb 2023 11:39:21 +0900
Subject: [PATCH] 4957: Fix Frida debugger agent executableJar build

Fix Frida debugger agent executableJar build
- Add missing shell script for executable jar target
- Add exclude for duplicate files, fixes issue with help
Note the linkages in the Frida README
Use env to locate bash in Frida executable Jar
On macOS bash is in a different path
---
 .../Debug/Debugger-agent-frida/FridaNotes.txt |  3 +++
 .../Debug/Debugger-agent-frida/build.gradle   |  2 +-
 .../src/main/sh/execjar.sh                    | 22 +++++++++++++++++++
 3 files changed, 26 insertions(+), 1 deletion(-)
 create mode 100644 Ghidra/Debug/Debugger-agent-frida/src/main/sh/execjar.sh

diff --git a/Ghidra/Debug/Debugger-agent-frida/FridaNotes.txt b/Ghidra/Debug/Debugger-agent-frida/FridaNotes.txt
index 50ad5712d..d1cdb3959 100644
--- a/Ghidra/Debug/Debugger-agent-frida/FridaNotes.txt
+++ b/Ghidra/Debug/Debugger-agent-frida/FridaNotes.txt
@@ -12,6 +12,9 @@ Ghidra needs a dynamically-loadable version of libfrida-core.a which you can gen
 	cp ghidra_wrapper.c into the directory with libfrida-core.a and frida-core.h (distro or DEVKIT)
 	g++ -shared ghidra_wrapper.c ./libfrida-core.a -o libfrida-core.so
 
+On macOS you will need to also link Objective-C, libresolv and the AppKit and Foundation frameworks:
+	clang++ -lobjc -lresolv -framework Foundation -framework AppKit -shared ghidra_wrapper.c ./libfrida-core.a -o libfrida-core.so
+
 Libfrida-core.so should then be added to the jna.library.path or put someplace like /usr/lib/x86_64-linux-gnu, where it will get picked up by Native.load().
 
 - Frida Functionality
diff --git a/Ghidra/Debug/Debugger-agent-frida/build.gradle b/Ghidra/Debug/Debugger-agent-frida/build.gradle
index d4a95dca6..8ec1593cb 100644
--- a/Ghidra/Debug/Debugger-agent-frida/build.gradle
+++ b/Ghidra/Debug/Debugger-agent-frida/build.gradle
@@ -64,7 +64,7 @@ task nodepJar(type: Jar) {
 	inputs.file(file(jar.archivePath))
 	dependsOn(configureNodepJar)
 	dependsOn(jar)
-	
+	duplicatesStrategy = 'exclude'
 	archiveAppendix = 'nodep'
 	manifest {
 		attributes['Main-Class'] = 'agent.lldb.gadp.FridaGadpServer'
diff --git a/Ghidra/Debug/Debugger-agent-frida/src/main/sh/execjar.sh b/Ghidra/Debug/Debugger-agent-frida/src/main/sh/execjar.sh
new file mode 100644
index 000000000..b1cab936f
--- /dev/null
+++ b/Ghidra/Debug/Debugger-agent-frida/src/main/sh/execjar.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+## ###
+#  IP: GHIDRA
+#
+#  Licensed under the Apache License, Version 2.0 (the "License");
+#  you may not use this file except in compliance with the License.
+#  You may obtain a copy of the License at
+#
+#       http://www.apache.org/licenses/LICENSE-2.0
+#
+#  Unless required by applicable law or agreed to in writing, software
+#  distributed under the License is distributed on an "AS IS" BASIS,
+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#  See the License for the specific language governing permissions and
+#  limitations under the License.
+##
+# This clever bit can be prepended to a JAR to make it self-executable
+
+set -e
+
+java -jar "$0"
+exit
-- 
2.39.1

