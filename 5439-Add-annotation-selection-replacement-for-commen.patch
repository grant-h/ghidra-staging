From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ethan Arns <ethanarns95@gmail.com>
Date: Sat, 10 Jun 2023 12:31:56 -0700
Subject: [PATCH] 5439: Add annotation selection replacement for comments

Refactored duplicate annotation insertion into method, style fixes
---
 .../plugin/core/comments/CommentsDialog.java  | 27 ++++++++++++++-----
 .../field/AddressAnnotatedStringHandler.java  |  5 ++++
 .../viewer/field/AnnotatedStringHandler.java  |  9 +++++++
 .../field/ExecutableTaskStringHandler.java    |  5 ++++
 .../field/InvalidAnnotatedStringHandler.java  |  5 ++++
 .../field/ProgramAnnotatedStringHandler.java  |  5 ++++
 .../field/SymbolAnnotatedStringHandler.java   |  5 ++++
 .../field/URLAnnotatedStringHandler.java      |  5 ++++
 8 files changed, 59 insertions(+), 7 deletions(-)

diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/comments/CommentsDialog.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/comments/CommentsDialog.java
index f8abf9aad..dc1cd2021 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/comments/CommentsDialog.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/comments/CommentsDialog.java
@@ -25,6 +25,8 @@ import javax.swing.event.DocumentListener;
 import javax.swing.text.Document;
 import javax.swing.text.JTextComponent;
 
+import org.apache.commons.lang3.StringUtils;
+
 import docking.*;
 import docking.widgets.OptionDialog;
 import docking.widgets.checkbox.GCheckBox;
@@ -266,12 +268,15 @@ public class CommentsDialog extends ReusableDialogComponentProvider implements K
 		GComboBox<AnnotationAdapterWrapper> annotationsComboBox = new GComboBox<>(annotations);
 		JButton addAnnotationButton = new JButton("Add Annotation");
 		addAnnotationButton.addActionListener(e -> {
-			JTextArea currentTextArea = getSelectedTextArea();
+			JTextArea textArea = getSelectedTextArea();
 			AnnotationAdapterWrapper aaw =
 				(AnnotationAdapterWrapper) annotationsComboBox.getSelectedItem();
-			currentTextArea.insert(aaw.getPrototypeString(),
-				currentTextArea.getCaretPosition());
-			currentTextArea.setCaretPosition(currentTextArea.getCaretPosition() - 1);
+			String selectedText = textArea.getSelectedText();
+			if (!StringUtils.isBlank(selectedText)) {
+				textArea.replaceSelection(aaw.getPrototypeString(selectedText));
+			} else {
+				insertAnnotation(textArea, aaw);
+			}
 		});
 		JPanel annoPanel = new JPanel();
 		annoPanel.add(addAnnotationButton);
@@ -359,9 +364,7 @@ public class CommentsDialog extends ReusableDialogComponentProvider implements K
 			JTextArea currentTextArea = getSelectedTextArea();
 			for (AnnotationAdapterWrapper annotation : annotations) {
 				if (annotation.toString().equals(e.getActionCommand())) {
-					currentTextArea.insert(annotation.getPrototypeString(),
-						currentTextArea.getCaretPosition());
-					currentTextArea.setCaretPosition(currentTextArea.getCaretPosition() - 1);
+					insertAnnotation(currentTextArea, annotation);
 				}
 			}
 		};
@@ -383,6 +386,12 @@ public class CommentsDialog extends ReusableDialogComponentProvider implements K
 		return panel;
 	}
 
+	private void insertAnnotation(JTextArea textArea, AnnotationAdapterWrapper annotation) {
+		textArea.insert(annotation.getPrototypeString(),
+				textArea.getCaretPosition());
+		textArea.setCaretPosition(textArea.getCaretPosition() - 1);
+	}
+
 	private void installUndoRedo(JTextComponent textComponent) {
 		UndoRedoKeeper undoRedoKeeper = DockingUtils.installUndoRedo(textComponent);
 
@@ -526,5 +535,9 @@ public class CommentsDialog extends ReusableDialogComponentProvider implements K
 		public String getPrototypeString() {
 			return handler.getPrototypeString();
 		}
+
+		public String getPrototypeString(String contained) {
+			return handler.getPrototypeString(contained);
+		}
 	}
 }
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/AddressAnnotatedStringHandler.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/AddressAnnotatedStringHandler.java
index 38623b1fd..1e7045219 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/AddressAnnotatedStringHandler.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/AddressAnnotatedStringHandler.java
@@ -111,4 +111,9 @@ public class AddressAnnotatedStringHandler implements AnnotatedStringHandler {
 		return "{@address 0x00}";
 	}
 
+	@Override
+	public String getPrototypeString(String contained) {
+		return "{@address 0x" + contained.trim() + "}";
+	}
+
 }
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/AnnotatedStringHandler.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/AnnotatedStringHandler.java
index 33d2a3018..0e2ccc936 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/AnnotatedStringHandler.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/AnnotatedStringHandler.java
@@ -95,4 +95,13 @@ public interface AnnotatedStringHandler extends ExtensionPoint {
 	 * @return the example of how this is used.
 	 */
 	public String getPrototypeString();
+
+	/**
+	 * Returns an example string of how the annotation is used
+	 * @param displayText The text that may be wrapped, cannot be null
+	 * @return the example of how this is used.
+	 */
+	public default String getPrototypeString(String displayText) {
+		return getPrototypeString();
+	}
 }
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/ExecutableTaskStringHandler.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/ExecutableTaskStringHandler.java
index 35277768a..3957c2ecf 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/ExecutableTaskStringHandler.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/ExecutableTaskStringHandler.java
@@ -196,4 +196,9 @@ public class ExecutableTaskStringHandler implements AnnotatedStringHandler {
 			return buffer.toString();
 		}
 	}
+
+	@Override
+	public String getPrototypeString(String contained) {
+		return "{@execute " + contained.trim() + "}";
+	}
 }
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/InvalidAnnotatedStringHandler.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/InvalidAnnotatedStringHandler.java
index 0f745e99d..ce791faeb 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/InvalidAnnotatedStringHandler.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/InvalidAnnotatedStringHandler.java
@@ -63,4 +63,9 @@ public class InvalidAnnotatedStringHandler implements AnnotatedStringHandler {
 	public String getPrototypeString() {
 		return "";
 	}
+
+	@Override
+	public String getPrototypeString(String contained) {
+		return this.getPrototypeString();
+	}
 }
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/ProgramAnnotatedStringHandler.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/ProgramAnnotatedStringHandler.java
index 066d33361..d0a56ec40 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/ProgramAnnotatedStringHandler.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/ProgramAnnotatedStringHandler.java
@@ -278,4 +278,9 @@ public class ProgramAnnotatedStringHandler implements AnnotatedStringHandler {
 		return "{@program program_name.exe@symbol_name}";
 	}
 
+	@Override
+	public String getPrototypeString(String contained) {
+		return "{@program " + contained.trim() + "}";
+	}
+
 }
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/SymbolAnnotatedStringHandler.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/SymbolAnnotatedStringHandler.java
index f843f4f27..958dd9fc1 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/SymbolAnnotatedStringHandler.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/SymbolAnnotatedStringHandler.java
@@ -174,4 +174,9 @@ public class SymbolAnnotatedStringHandler implements AnnotatedStringHandler {
 		return "{@symbol symbol_address}";
 	}
 
+	@Override
+	public String getPrototypeString(String contained) {
+		return "{@symbol " + contained.trim() + "}";
+	}
+
 }
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/URLAnnotatedStringHandler.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/URLAnnotatedStringHandler.java
index f283829aa..bbb867065 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/URLAnnotatedStringHandler.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/URLAnnotatedStringHandler.java
@@ -119,4 +119,9 @@ public class URLAnnotatedStringHandler implements AnnotatedStringHandler {
 		return "{@url http://www.example.com}";
 	}
 
+	@Override
+	public String getPrototypeString(String contained) {
+		return "{@url " + contained.trim() + "}";
+	}
+
 }
-- 
2.41.0

