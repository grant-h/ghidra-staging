diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/script/GhidraScript.java b/Ghidra/Features/Base/src/main/java/ghidra/app/script/GhidraScript.java
index 66eec871b79..86957d7342f 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/script/GhidraScript.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/script/GhidraScript.java
@@ -59,6 +59,7 @@
 import ghidra.program.flatapi.FlatProgramAPI;
 import ghidra.program.model.address.Address;
 import ghidra.program.model.address.AddressSetView;
+import ghidra.program.model.data.DataTypeManager;
 import ghidra.program.model.lang.*;
 import ghidra.program.model.listing.*;
 import ghidra.program.model.listing.CodeUnitFormatOptions.ShowBlockName;
@@ -3781,4 +3782,28 @@ private static String zeropad(String s, int len) {
 		}
 		return buffer.toString();
 	}
+
+	/**
+	 * Gets the open DataTypeManager with the corresponding name.
+	 * <br><br>
+	 * NOTE: When using a DataTypeManager that is not the currentProgram's
+	 * it may be necessary to handle the transactions.
+	 * @param name the DataTypeManager's name
+	 * @return the DataTypeManager or null if not found
+	 * @see DataTypeManager#startTransaction(String)
+	 * @see DataTypeManager#endTransaction(int,boolean)
+	 */
+	public DataTypeManager getDataTypeManager(String name) {
+		DataTypeManagerService service = state.getTool().getService(DataTypeManagerService.class);
+		if (service == null) {
+			printerr("The DataTypeManagerService is not enabled");
+			return null;
+		}
+		for (DataTypeManager dtm : service.getDataTypeManagers()) {
+			if (dtm.getName().equals(name)) {
+				return dtm;
+			}
+		}
+		return null;
+	}
 }
